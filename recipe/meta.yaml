{% set version = "3.3" %}

package:
  name: libffi
  version: {{ version }}

source:
  url: https://github.com/libffi/libffi/archive/v{{ version }}.tar.gz
  sha256: 3f2f86094f5cf4c36cfe850d2fe029d01f5c2c2296619407c8ba0d8207da9a6b
  patches:
    - 0001-Add-cmake-configuration-files.patch
    - 0004-Fix-Win32-and-Win64-MASM-build.patch
    - 0005-Add-pkgconfig-file-to-CMake-build.patch
    - 0006-Make-static-library-output-as-libffi.lib-on-Windows.patch

build:
  number: 0
  run_exports:
    # good history: https://abi-laboratory.pro/tracker/timeline/libffi/
    - {{ pin_subpackage('libffi', max_pin='x.x') }}

requirements:
  build:
    - cmake
    - jom  # [win]
    - make  # [not win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:

test:
  commands:
    - test -e $PREFIX/lib/libffi${SHLIB_EXT}                       # [not win]
    - test -e $PREFIX/lib/libffi.a                                 # [not win]
    - test -e $PREFIX/include/ffi.h                                # [not win]
    - test -e $PREFIX/include/ffitarget.h                          # [not win]
    - if not exist %LIBRARY_PREFIX%/bin/ffi.dll exit /b 1          # [win]
    - if not exist %LIBRARY_PREFIX%/lib/ffi.lib exit /b 1          # [win]
    - if not exist %LIBRARY_PREFIX%/lib/libffi.lib exit /b 1       # [win]
    - if not exist %LIBRARY_PREFIX%/include/ffi.h exit /b 1        # [win]
    - if not exist %LIBRARY_PREFIX%/include/ffitarget.h exit /b 1  # [win]

about:
  home: https://sourceware.org/libffi/
  license: Custom
  license_file: LICENSE
  summary: A Portable Foreign Function Interface Library.

  description: |
    The libffi library provides a portable, high level programming interface
    to various calling conventions. This allows a programmer to call any
    function specified by a call interface description at run-time.
  doc_url: https://sourceware.org/libffi/
  dev_url: https://github.com/libffi/libffi

extra:
  recipe-maintainers:
    - stefan-balke
    - scopatz
